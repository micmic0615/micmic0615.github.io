{"version":3,"sources":["../static/js/1.9e5e0cf1.chunk.js","constants/noteList.js","constants/scaleList.js","pages/Home/notes.js"],"names":["webpackJsonp","206","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","note_list","name","octave","string","perfect","return_list","reverse","map","note","index","assign","position","active","207","c_major","g_major","d_major","a_major","e_major","b_major","f♯_major","c♯_major","86","_","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","d","getPrecisionBase","generateNote","validateNote","readNote","__WEBPACK_IMPORTED_MODULE_0_Constants_noteList_js__","__WEBPACK_IMPORTED_MODULE_1_Constants_scaleList_js__","is_sharp","hertz_list","NoteList","forEach","note_list_item","push","base_frequency","next_frequency","prev_frequency","divider","hertz","recompute_hertz","isNil","Math","abs","count","arguments","undefined","callback","notes_list","this","state","notes_pool","filter","p","random_seed","floor","random","previous_note","setState","isFunction","frequency","valid_note","noise_filter","isEmptyArray","note_target","last_note","note_test","last_test","concat","sharps_list","ScaleList","key_signature_name","required_note","notes_index","required_name","required_perfect","includes","frequency_difference","note_current","precision_base","correct","rating","correct_max","onCorrect","bind","notes_index_count","notes_index_assist","mistake_padding","mistake","mistake_max","onMistake","_this","combo_base_score","progress_required","combo","combo_max","adjusted_precision_base","correct_ratio","perfect_ratio","reduce","a","b","note_percent","note_rating","round","note_score","jsonClone","accuracy","precision","incremented_index","notes_index_start","notes_index_range","progress_current","min","running","sounds","ding","currentTime","play","dingding","score","mistake_padding_max","dong","errors","call"],"mappings":"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","file":"static/js/1.9e5e0cf1.chunk.js","sourcesContent":["webpackJsonp([1,4,5],{\n\n/***/ 206:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\nvar note_list=[{name:\"G\",octave:3,string:\"G\",perfect:[196.00,207.65]},{name:\"A\",octave:3,string:\"G\",perfect:[220.00,233.08]},{name:\"B\",octave:3,string:\"G\",perfect:[246.94,261.63]},{name:\"C\",octave:4,string:\"G\",perfect:[261.63,277.18]},{name:\"D\",octave:4,string:\"D\",perfect:[293.66,311.13]},{name:\"E\",octave:4,string:\"D\",perfect:[329.63,349.23]},{name:\"F\",octave:4,string:\"D\",perfect:[349.23,369.99]},{name:\"G\",octave:4,string:\"D\",perfect:[392.00,415.30]},{name:\"A\",octave:4,string:\"A\",perfect:[440.00,466.16]},{name:\"B\",octave:4,string:\"A\",perfect:[493.88,523.25]},{name:\"C\",octave:5,string:\"A\",perfect:[523.25,554.37]},{name:\"D\",octave:5,string:\"A\",perfect:[587.33,622.25]},{name:\"E\",octave:5,string:\"E\",perfect:[659.25,698.46]},{name:\"F\",octave:5,string:\"E\",perfect:[698.46,739.99]},{name:\"G\",octave:5,string:\"E\",perfect:[783.99,830.61]},{name:\"A\",octave:5,string:\"E\",perfect:[880.00,932.33]},{name:\"B\",octave:5,string:\"E\",perfect:[987.77,1046.50]},{name:\"C\",octave:6,string:\"B\",perfect:[1046.50,1108.73]},{name:\"D\",octave:6,string:\"B\",perfect:[1174.66,1244.51]},{name:\"E\",octave:6,string:\"B\",perfect:[1318.51,1396.91]},{name:\"F\",octave:6,string:\"B\",perfect:[1396.91,1479.98]}];var return_list=note_list.reverse().map(function(note,index){return Object.assign({},note,{position:index*25,active:true});});return_list.reverse();/* harmony default export */ __webpack_exports__[\"default\"] = (return_list);\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"c_major\":[],\"g_major\":[\"F\"],\"d_major\":[\"F\",\"C\"],\"a_major\":[\"F\",\"C\",\"G\"],\"e_major\":[\"F\",\"C\",\"G\",\"D\"],\"b_major\":[\"F\",\"C\",\"G\",\"D\",\"A\"],\"f♯_major\":[\"F\",\"C\",\"G\",\"D\",\"A\",\"E\"],\"c♯_major\":[\"F\",\"C\",\"G\",\"D\",\"A\",\"E\",\"B\"]});\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(_) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPrecisionBase\", function() { return getPrecisionBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateNote\", function() { return generateNote; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateNote\", function() { return validateNote; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readNote\", function() { return readNote; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Constants_noteList_js__ = __webpack_require__(206);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_Constants_scaleList_js__ = __webpack_require__(207);\nfunction _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}// import { setStateAndSave, getStateFromLocalStorage } from 'Assets/scripts/localStorage';\nvar getPrecisionBase=function getPrecisionBase(note,is_sharp){var hertz_list=[];__WEBPACK_IMPORTED_MODULE_0_Constants_noteList_js__[\"default\"].forEach(function(note_list_item){hertz_list.push(note_list_item.perfect[0]);hertz_list.push(note_list_item.perfect[1]);});var base_frequency=note.perfect[is_sharp?1:0];var next_frequency=0;var prev_frequency=0;var divider=2;hertz_list.forEach(function(hertz,index){if(base_frequency==hertz){if(index>0){if(prev_frequency==base_frequency){var recompute_hertz=hertz_list[index+2];if(_.isNil(recompute_hertz)){prev_frequency=base_frequency;divider-=1;}else{prev_frequency=hertz_list[index-2];}}else{prev_frequency=hertz_list[index-1];}}else{prev_frequency=base_frequency;divider-=1;}if(index<hertz_list.length-1){if(next_frequency==base_frequency){var _recompute_hertz=hertz_list[index+2];if(_.isNil(_recompute_hertz)){next_frequency=base_frequency;divider-=1;}else{next_frequency=hertz_list[index+2];}}else{next_frequency=hertz_list[index+1];}}else{next_frequency=base_frequency;divider-=1;}}});var next_difference=Math.abs(base_frequency-next_frequency);var prev_difference=Math.abs(base_frequency-prev_frequency);var return_value=(next_difference+prev_difference)/(divider*1.5);return return_value;};var generateNote=function generateNote(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var callback=arguments[1];var notes_list=[].concat(_toConsumableArray(this.state.notes_list));var notes_pool=this.state.notes_pool.filter(function(p){return p.active==true;});if(notes_pool.length>1){while(count>0){var random_seed=Math.floor(Math.random()*notes_pool.length);if(random_seed==notes_pool.length){random_seed=notes_pool.length-1;};if(!_.isNil(this.previous_note)){while(random_seed==this.previous_note){random_seed=Math.floor(Math.random()*notes_pool.length);if(random_seed==notes_pool.length){random_seed=notes_pool.length-1;};}}this.previous_note=random_seed;notes_list.push(notes_pool[random_seed]);count--;}}this.setState({notes_list:notes_list},function(){if(!_.isNil(callback)&&_.isFunction(callback)){callback();}});};var validateNote=function validateNote(note){if(note.frequency>190&&note.frequency<1600){var valid_note=false;switch(this.state.noise_filter){case\"frequency\":if(_.isEmptyArray(this.note_target)){this.note_target=[note.frequency];}else{var last_note=this.note_target[this.note_target.length-1];if(Math.abs(note.frequency-last_note)<5){valid_note=true;}else{if(_.isEmptyArray(this.note_test)){this.note_test=[note.frequency];}else{var last_test=this.note_test[this.note_test.length-1];if(Math.abs(note.frequency-last_test)<5){this.note_test.push(note.frequency);}else{this.note_test=[note.frequency];}if(this.note_test.length>3){this.note_target=[].concat(_toConsumableArray(this.note_test));valid_note=true;}}}};break;case\"name\":default:if(_.isEmptyArray(this.note_target)){this.note_target=[note.name];}else{var _last_note=this.note_target[this.note_target.length-1];if(note.name==_last_note){valid_note=true;}else{if(_.isEmptyArray(this.note_test)){this.note_test=[note.name];}else{var _last_test=this.note_test[this.note_test.length-1];if(note.name==_last_test){this.note_test.push(note.name);}else{this.note_test=[note.name];}if(this.note_test.length>3){this.note_target=[].concat(_toConsumableArray(this.note_test));valid_note=true;}}}};break;}if(valid_note){this.note_test=[];this.note_target.push(note[this.state.noise_filter]);this.readNote(note);}}};var readNote=function readNote(note){var sharps_list=__WEBPACK_IMPORTED_MODULE_1_Constants_scaleList_js__[\"default\"][this.state.key_signature_name];var required_note=this.state.notes_list[this.state.notes_index];var required_name=required_note.name;var required_perfect=required_note.perfect[0];var is_sharp=sharps_list.includes(required_name);if(is_sharp){required_perfect=required_note.perfect[1];switch(required_name){case\"E\":required_name=\"F\";break;case\"B\":required_name=\"C\";break;default:required_name+=\"♯\";break;}}var frequency_difference=Math.abs(required_perfect-note.frequency);if(_.isNil(this.note_current.precision_base)){this.note_current.precision_base=this.getPrecisionBase(required_note,is_sharp);}if(note.name==required_name&&frequency_difference<this.note_current.precision_base){this.note_current.correct+=1;this.note_current.rating.push(frequency_difference);if(this.note_current.correct>=this.note_current.correct_max){onCorrect.bind(this)(note);}else{if(!this.state.notes_index_count){this.setState({notes_index_assist:\"correct\"});}}}else{if(this.note_current.mistake_padding<=0){this.note_current.mistake+=1;if(this.note_current.mistake>=this.note_current.mistake_max&&this.state.notes_index_count){onMistake.bind(this)(note);}else{this.note_current.correct=0;}if(!this.state.notes_index_count){this.setState({notes_index_assist:required_perfect>note.frequency?\"higher\":\"lower\"});}}else{this.note_current.mistake_padding-=1;}}};var onCorrect=function onCorrect(note){var _this=this;var accuracy_factor=50;var precision_factor=50;var rating_factor=70;var combo_factor=30;var combo_base_score=1000/((this.state.progress_required+1)*(this.state.progress_required/2));var combo=this.state.notes_index_count?this.state.combo+1:0;if(combo>=this.combo_max){this.combo_max=combo;}var adjusted_precision_base=this.note_current.precision_base/2;var correct_ratio=this.note_current.correct/(this.note_current.mistake+this.note_current.correct)*accuracy_factor;var perfect_ratio=(adjusted_precision_base-this.note_current.rating.reduce(function(a,b){return a+b;},0)/this.note_current.rating.length)/adjusted_precision_base*precision_factor;var note_percent=correct_ratio+perfect_ratio;var note_rating=Math.round((note_percent*rating_factor+combo*combo_base_score*combo_factor)*100/this.state.progress_required);var note_score=this.state.notes_index_count?note_rating:0;var notes_list=_.jsonClone([].concat(_toConsumableArray(this.state.notes_list)));notes_list[this.state.notes_index].accuracy=this.state.notes_index_count?Math.round(correct_ratio*100/accuracy_factor):0;notes_list[this.state.notes_index].precision=this.state.notes_index_count?Math.round(perfect_ratio*100/precision_factor):0;var incremented_index=this.state.notes_index+1;var notes_index_start=this.state.notes_index_start;if(incremented_index>=this.state.notes_index_start+this.state.notes_index_range){notes_index_start=this.state.notes_index_start+this.state.notes_index_range;}var progress_current=Math.min(this.state.progress_current+1,this.state.progress_required);var running=this.state.running;this.sounds.ding.currentTime=0;this.sounds.ding.play();if(progress_current==this.state.progress_required){incremented_index=incremented_index-1;running=3;this.sounds.dingding.currentTime=0;this.sounds.dingding.play();}this.setState({notes_index:incremented_index,score:Math.min(this.state.score+note_score,1000000),notes_index_count:true,notes_index_assist:\"\",notes_index_start:notes_index_start,progress_current:progress_current,running:running,combo:combo,notes_list:notes_list},function(){_this.note_current.correct=0;_this.note_current.mistake=0;_this.note_current.rating=[];_this.note_current.precision_base=null;_this.note_current.mistake_padding=_this.note_current.mistake_padding_max;});};var onMistake=function onMistake(note){this.sounds.dong.currentTime=0;this.sounds.dong.play();this.setState({notes_index_count:false,combo:0,errors:this.state.errors+1});};\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(58)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.9e5e0cf1.chunk.js","let note_list = [\r\n    {name: \"G\", octave: 3, string: \"G\", perfect: [196.00, 207.65]},\r\n    {name: \"A\", octave: 3, string: \"G\", perfect: [220.00, 233.08]},\r\n    {name: \"B\", octave: 3, string: \"G\", perfect: [246.94, 261.63]},\r\n    {name: \"C\", octave: 4, string: \"G\", perfect: [261.63, 277.18]},\r\n\r\n    {name: \"D\", octave: 4, string: \"D\", perfect: [293.66, 311.13]},\r\n    {name: \"E\", octave: 4, string: \"D\", perfect: [329.63, 349.23]},\r\n    {name: \"F\", octave: 4, string: \"D\", perfect: [349.23, 369.99]},\r\n    {name: \"G\", octave: 4, string: \"D\", perfect: [392.00, 415.30]},\r\n\r\n    {name: \"A\", octave: 4, string: \"A\", perfect: [440.00, 466.16]},\r\n    {name: \"B\", octave: 4, string: \"A\", perfect: [493.88, 523.25]},\r\n    {name: \"C\", octave: 5, string: \"A\", perfect: [523.25, 554.37]},\r\n    {name: \"D\", octave: 5, string: \"A\", perfect: [587.33, 622.25]},\r\n\r\n    {name: \"E\", octave: 5, string: \"E\", perfect: [659.25, 698.46]},\r\n    {name: \"F\", octave: 5, string: \"E\", perfect: [698.46, 739.99]},\r\n    {name: \"G\", octave: 5, string: \"E\", perfect: [783.99, 830.61]},\r\n    {name: \"A\", octave: 5, string: \"E\", perfect: [880.00, 932.33]},\r\n\r\n    {name: \"B\", octave: 5, string: \"E\", perfect: [987.77, 1046.50]},\r\n\r\n    {name: \"C\", octave: 6, string: \"B\", perfect: [1046.50, 1108.73]},\r\n    {name: \"D\", octave: 6, string: \"B\", perfect: [1174.66, 1244.51]},\r\n    {name: \"E\", octave: 6, string: \"B\", perfect: [1318.51, 1396.91]},\r\n\r\n    {name: \"F\", octave: 6, string: \"B\", perfect: [1396.91, 1479.98]},\r\n]\r\n\r\nlet return_list = note_list.reverse().map((note, index)=>{\r\n    return {...note, position: index*25, active: true}\r\n})\r\n\r\nreturn_list.reverse();\r\n\r\nexport default return_list;\n\n\n// WEBPACK FOOTER //\n// ./src/constants/noteList.js","export default {\r\n    \"c_major\": [],\r\n    \"g_major\": [\"F\"],\r\n    \"d_major\": [\"F\", \"C\"],\r\n    \"a_major\": [\"F\", \"C\", \"G\"],\r\n    \"e_major\": [\"F\", \"C\", \"G\", \"D\"],\r\n    \"b_major\": [\"F\", \"C\", \"G\", \"D\", \"A\"],\r\n    \"f♯_major\": [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\"],\r\n    \"c♯_major\": [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"],\r\n}\r\n   \r\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/scaleList.js","// import { setStateAndSave, getStateFromLocalStorage } from 'Assets/scripts/localStorage';\r\nimport NoteList from 'Constants/noteList.js';\r\nimport ScaleList from 'Constants/scaleList.js';\r\n\r\nexport const getPrecisionBase = function(note, is_sharp){\r\n    let hertz_list = [];\r\n    NoteList.forEach((note_list_item)=>{\r\n        hertz_list.push(note_list_item.perfect[0])\r\n        hertz_list.push(note_list_item.perfect[1])\r\n    });\r\n\r\n    let base_frequency = note.perfect[is_sharp ? 1 : 0];\r\n    let next_frequency = 0;\r\n    let prev_frequency = 0;\r\n    let divider = 2;\r\n\r\n    hertz_list.forEach((hertz, index)=>{\r\n        if (base_frequency == hertz){\r\n            if (index > 0){\r\n                if (prev_frequency == base_frequency){\r\n                    let recompute_hertz = hertz_list[index + 2];\r\n                    if (_.isNil(recompute_hertz)){\r\n                        prev_frequency = base_frequency;\r\n                        divider -= 1;\r\n                    } else {\r\n                        prev_frequency = hertz_list[index - 2];\r\n                    }\r\n                    \r\n                } else {\r\n                    prev_frequency = hertz_list[index - 1];\r\n                }\r\n            } else {\r\n                prev_frequency = base_frequency;\r\n                divider -= 1;\r\n            }\r\n\r\n            if (index < hertz_list.length - 1){\r\n                if (next_frequency == base_frequency){\r\n                    let recompute_hertz = hertz_list[index + 2];\r\n                    if (_.isNil(recompute_hertz)){\r\n                        next_frequency = base_frequency;\r\n                        divider -= 1;\r\n                    } else {\r\n                        next_frequency = hertz_list[index + 2];\r\n                    }\r\n                } else {\r\n                    next_frequency = hertz_list[index + 1];\r\n                }\r\n            } else {\r\n                next_frequency = base_frequency;\r\n                divider -= 1;\r\n            }\r\n        }\r\n    })\r\n\r\n    let next_difference = Math.abs(base_frequency - next_frequency);\r\n    let prev_difference = Math.abs(base_frequency - prev_frequency);\r\n    \r\n    let return_value = (next_difference + prev_difference) / (divider*1.5);\r\n    return return_value\r\n}\r\n\r\nexport const generateNote = function(count = 0, callback){\r\n    let notes_list = [...this.state.notes_list];\r\n    let notes_pool = this.state.notes_pool.filter(p=>(p.active == true));\r\n    if (notes_pool.length > 1){\r\n        while(count > 0){\r\n            let random_seed = Math.floor(Math.random()*(notes_pool.length));\r\n            if (random_seed == notes_pool.length){random_seed = notes_pool.length - 1};\r\n        \r\n            if (!_.isNil(this.previous_note)){\r\n                while(random_seed == this.previous_note){\r\n                    random_seed = Math.floor(Math.random()*(notes_pool.length));\r\n                    if (random_seed == notes_pool.length){random_seed = notes_pool.length - 1};\r\n                }\r\n            }\r\n    \r\n            this.previous_note = random_seed;\r\n            notes_list.push( notes_pool[random_seed] )\r\n            count--\r\n        }\r\n    }\r\n\r\n    this.setState({notes_list}, ()=>{\r\n        if (!_.isNil(callback) && _.isFunction(callback)){callback()}\r\n    });\r\n}\r\n\r\nexport const validateNote = function(note){\r\n    if (note.frequency > 190 && note.frequency < 1600){\r\n        let valid_note = false;\r\n        switch(this.state.noise_filter){\r\n            case \"frequency\":\r\n                if (_.isEmptyArray(this.note_target)){\r\n                    this.note_target = [ note.frequency ]\r\n                } else {\r\n                    let last_note = this.note_target[this.note_target.length - 1];\r\n                    if (Math.abs(note.frequency - last_note) < 5){\r\n                        valid_note = true;\r\n                    } else {\r\n                        if (_.isEmptyArray(this.note_test)){\r\n                            this.note_test = [ note.frequency ];\r\n                        } else {\r\n                            let last_test = this.note_test[this.note_test.length - 1];\r\n                            if (Math.abs(note.frequency - last_test) < 5){\r\n                                this.note_test.push(note.frequency);\r\n                            } else {\r\n                                this.note_test = [ note.frequency ]\r\n                            }\r\n    \r\n                            if (this.note_test.length > 3){\r\n                                this.note_target = [ ...this.note_test ];\r\n                                valid_note = true;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                break\r\n            \r\n            case \"name\":\r\n            default: \r\n                if (_.isEmptyArray(this.note_target)){\r\n                    this.note_target = [ note.name ]\r\n                } else {\r\n                    let last_note = this.note_target[this.note_target.length - 1];\r\n                    if (note.name == last_note){\r\n                        valid_note = true;\r\n                    } else {\r\n                        if (_.isEmptyArray(this.note_test)){\r\n                            this.note_test = [ note.name ];\r\n                        } else {\r\n                            let last_test = this.note_test[this.note_test.length - 1];\r\n                            if (note.name == last_test){\r\n                                this.note_test.push(note.name);\r\n                            } else {\r\n                                this.note_test = [ note.name ]\r\n                            }\r\n    \r\n                            if (this.note_test.length > 3){\r\n                                this.note_target = [ ...this.note_test ];\r\n                                valid_note = true;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                break\r\n        }\r\n\r\n        if (valid_note){\r\n            this.note_test = [];\r\n            this.note_target.push(note[this.state.noise_filter]);\r\n            this.readNote(note)\r\n        }\r\n    }\r\n}\r\n\r\nexport const readNote = function(note){\r\n    let sharps_list = ScaleList[this.state.key_signature_name];\r\n    let required_note = this.state.notes_list[this.state.notes_index];\r\n    let required_name = required_note.name;\r\n    let required_perfect = required_note.perfect[0];\r\n\r\n    let is_sharp = sharps_list.includes(required_name);\r\n    \r\n    if (is_sharp){\r\n        required_perfect = required_note.perfect[1];\r\n        switch(required_name){\r\n            case \"E\": required_name = \"F\"; break;\r\n            case \"B\": required_name = \"C\"; break;\r\n            default: required_name += \"♯\"; break;\r\n        }\r\n    }\r\n\r\n    let frequency_difference = Math.abs(required_perfect - note.frequency);\r\n\r\n    if (_.isNil(this.note_current.precision_base)){\r\n        this.note_current.precision_base = this.getPrecisionBase(required_note, is_sharp)\r\n    }\r\n    \r\n    if (note.name == required_name && frequency_difference < this.note_current.precision_base){\r\n        this.note_current.correct += 1;\r\n        this.note_current.rating.push(frequency_difference);\r\n\r\n        if (this.note_current.correct >= this.note_current.correct_max){  \r\n            onCorrect.bind(this)(note);\r\n        } else {\r\n            if (!this.state.notes_index_count){\r\n                this.setState({\r\n                    notes_index_assist: \"correct\",\r\n                });\r\n            }\r\n        }\r\n    } else {\r\n        if (this.note_current.mistake_padding <= 0){\r\n            this.note_current.mistake += 1;\r\n            if (this.note_current.mistake >= this.note_current.mistake_max && this.state.notes_index_count){\r\n                onMistake.bind(this)(note)\r\n            } else {\r\n                this.note_current.correct = 0;\r\n            }\r\n\r\n            if (!this.state.notes_index_count){\r\n                this.setState({\r\n                    notes_index_assist: required_perfect > note.frequency ? \"higher\" : \"lower\",\r\n                });\r\n            }\r\n        } else {\r\n            this.note_current.mistake_padding -= 1;\r\n        }\r\n    }\r\n}\r\n\r\nconst onCorrect = function(note){\r\n    let accuracy_factor = 50;\r\n    let precision_factor = 50;\r\n\r\n    let rating_factor = 70;\r\n    let combo_factor = 30;\r\n\r\n    let combo_base_score = 1000/((this.state.progress_required + 1)*(this.state.progress_required/2));\r\n\r\n    let combo = this.state.notes_index_count ? this.state.combo + 1 : 0;\r\n    if (combo >= this.combo_max){this.combo_max = combo}\r\n\r\n    let adjusted_precision_base = this.note_current.precision_base/2;\r\n\r\n    let correct_ratio = (this.note_current.correct / (this.note_current.mistake + this.note_current.correct))*accuracy_factor;\r\n    let perfect_ratio = ((adjusted_precision_base - (this.note_current.rating.reduce((a, b) => a + b, 0) / this.note_current.rating.length)) / adjusted_precision_base)*precision_factor;\r\n    let note_percent = correct_ratio + perfect_ratio;\r\n\r\n    let note_rating = Math.round((((note_percent*rating_factor) + (combo*combo_base_score*combo_factor))*100) / this.state.progress_required);\r\n    let note_score = this.state.notes_index_count ? note_rating : 0;\r\n\r\n    let notes_list = _.jsonClone([...this.state.notes_list])\r\n    notes_list[this.state.notes_index].accuracy = this.state.notes_index_count ? Math.round(correct_ratio*100/accuracy_factor) : 0;\r\n    notes_list[this.state.notes_index].precision = this.state.notes_index_count ? Math.round(perfect_ratio*100/precision_factor) : 0;\r\n \r\n\r\n    let incremented_index = this.state.notes_index + 1;\r\n    let notes_index_start = this.state.notes_index_start\r\n    if (incremented_index >= this.state.notes_index_start + this.state.notes_index_range){\r\n        notes_index_start = this.state.notes_index_start + this.state.notes_index_range\r\n    }\r\n\r\n    let progress_current = Math.min(this.state.progress_current + 1, this.state.progress_required);\r\n\r\n    let running = this.state.running;\r\n    \r\n    this.sounds.ding.currentTime = 0\r\n    this.sounds.ding.play()\r\n    if (progress_current == this.state.progress_required){\r\n        incremented_index = incremented_index - 1;\r\n        running = 3;\r\n\r\n        this.sounds.dingding.currentTime = 0\r\n        this.sounds.dingding.play()\r\n    }\r\n\r\n    this.setState({\r\n        notes_index: incremented_index, \r\n        score: Math.min(this.state.score + note_score, 1000000),\r\n        notes_index_count: true,\r\n        notes_index_assist: \"\",\r\n        notes_index_start,\r\n        progress_current,\r\n        running,\r\n        combo,\r\n        notes_list,\r\n    }, ()=>{\r\n        this.note_current.correct = 0;\r\n        this.note_current.mistake = 0;\r\n        this.note_current.rating = [];\r\n        this.note_current.precision_base = null;\r\n        this.note_current.mistake_padding = this.note_current.mistake_padding_max;\r\n    })\r\n}\r\n\r\nconst onMistake = function(note){\r\n    this.sounds.dong.currentTime = 0\r\n    this.sounds.dong.play()\r\n    this.setState({\r\n        notes_index_count: false,\r\n        combo: 0,\r\n        errors: this.state.errors + 1\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Home/notes.js"],"sourceRoot":""}